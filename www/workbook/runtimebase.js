/**
 * @license Copyright 2013 - 2014 Intel Corporation All Rights Reserved.
 *
 * The source code, information and material ("Material") contained herein is owned by Intel Corporation or its
 * suppliers or licensors, and title to such Material remains with Intel Corporation or its suppliers or
 * licensors. The Material contains proprietary information of Intel or its suppliers and licensors. The
 * Material is protected by worldwide copyright laws and treaty provisions. No part of the Material may be used,
 * copied, reproduced, modified, published, uploaded, posted, transmitted, distributed or disclosed in any way
 * without Intel's prior express written permission. No license under any patent, copyright or other intellectual
 * property rights in the Material is granted to or conferred upon you, either expressly, by implication,
 * inducement, estoppel or otherwise. Any license under such intellectual property rights must be express and
 * approved by Intel in writing.
 *
 * Unless otherwise agreed by Intel in writing, you may not remove or alter this notice or any other notice
 * embedded in Materials by Intel or Intel's suppliers or licensors in any way.
 */
goog.provide("idr.workbook.RuntimeBase"),idr.workbook.RuntimeBase=function(){},idr.workbook.RuntimeBase.INVALID_CELL_NAME_EXCEPTION="invalidCellNameException",idr.workbook.RuntimeBase.UNABLE_TO_CALCULATE_DEPENDENCIES="unableToCalculateDependencies",idr.workbook.RuntimeBase.CIRCULAR_DEPENDENCY_EXCEPTION="circularDependencyException",idr.workbook.RuntimeBase.ERROR_IN_DEPENDENCY="#REF!",idr.workbook.RuntimeBase.ERROR_IN_VALUE="#VALUE!",idr.workbook.RuntimeBase.ERROR_IN_NAME="#NAME?",idr.workbook.RuntimeBase.prototype.cellNeedsToUpdate=function(cell){cell.setError(0,null),cell.Value=null,cell.Formula=null,this.calculateDependencies(cell),this.evaluateCell(cell),this.recalculateObservers(cell)},idr.workbook.RuntimeBase.prototype.recalculateObservers=function(cell){for(var observers=cell.getAllObservers(),z=0;z<observers.length;z++)observers[z].NeedEvaluate=!0;for(;0!==observers.length;)for(var i=0;i<observers.length;i++){for(var currentCell=observers[i],deps=currentCell.getDependencies(),cellReadyToEvaluate=!0,d=0;d<deps.length;d++)if(deps[d].NeedEvaluate){cellReadyToEvaluate=!1;break}if(cellReadyToEvaluate){this.evaluateCell(currentCell);var index=observers.indexOf(currentCell);-1!=index&&observers.splice(index,1)}}},idr.workbook.RuntimeBase.prototype.getMaxUserRows=function(){throw'Function "getMaxUserRows" not implemented in runtime'},idr.workbook.RuntimeBase.prototype.normalizeCellName=function(){throw'Function "normalizeCellName" not implemented in runtime'},idr.workbook.RuntimeBase.prototype.evaluateCell=function(){},idr.workbook.RuntimeBase.prototype.cellNameToRowColumn=function(){return{row:0,column:0}},idr.workbook.RuntimeBase.prototype.rowColumnToCellName=function(){return""},idr.workbook.RuntimeBase.prototype.validateCellName=function(){return null},idr.workbook.RuntimeBase.prototype.validateRangeName=function(){return null},idr.workbook.RuntimeBase.prototype.isFormula=function(){return!1},idr.workbook.RuntimeBase.prototype.expandRangeToCellNameArray=function(){return[]},idr.workbook.RuntimeBase.prototype.expandRangeToCellNameMatrix=function(){return[]},idr.workbook.RuntimeBase.prototype.getDependenciesNames=function(){return[]},idr.workbook.RuntimeBase.prototype.checkDependencies=function(cell){var deps=this.getDependenciesNames(cell);if(-1!==deps.indexOf(cell.Name))throw new Error(idr.workbook.RuntimeBase.CIRCULAR_DEPENDENCY_EXCEPTION);var cellObservers=cell.getAllObservers();for(var o in cellObservers)if(-1!==deps.indexOf(cellObservers[o].Name))throw new Error(idr.workbook.RuntimeBase.CIRCULAR_DEPENDENCY_EXCEPTION);return deps},idr.workbook.RuntimeBase.prototype.calculateDependencies=function(cell){var worksheet=cell.getParentWorksheet();try{cell.removeAllDependencies();var deps=this.checkDependencies(cell),cellDep=null;for(var i in deps)cellDep=worksheet.getCell(deps[i]),cellDep=null!==cellDep?worksheet.getCell(deps[i]):worksheet.setCell(deps[i],""),cell.addDependency(cellDep),cell.Value=null}catch(e){cell.setError(1,idr.workbook.RuntimeBase.ERROR_IN_DEPENDENCY)}},idr.workbook.RuntimeBase.prototype.normalizeFormulaText=function(formulaText){return formulaText};